name: Build and Deploy

on:
  push:  # Déclenche le workflow pour chaque push
    branches:
      - '**'  # Inclut toutes les branches
  pull_request:  # Déclenche le workflow pour chaque pull request
    branches:
      - '**'  # Inclut toutes les branches

jobs:
  ci_checks:  # Job pour vérifier la qualité du code
    runs-on: ubuntu-latest  # Utilise une machine virtuelle Ubuntu
    strategy:
      matrix: # strategy.matrix permet d'exécuter le workflow pour chaque version de Python spécifiées ci-dessous
        python-version: ['3.10', '3.11', '3.12', '3.13']  # Versions de Python à utiliser

    steps:
    - name: Check out repository
      uses: actions/checkout@v2  # Vérifie le code source du dépôt

    - name: Set up Python
      uses: actions/setup-python@v2  # Configure l'environnement Python
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Met à jour pip
        pip install black isort pylint  # Installe les outils de vérification de code
        pip install duckdb pandas streamlit # Installe les dépendances de l'application

    - name: Run Black
      run: black --check .  # Vérifie la conformité du code avec Black

    - name: Run isort
      run: isort . --check-only  # Vérifie l'ordre des imports avec isort

    - name: Run pylint
      run: pylint $(git ls-files '*.py')  # Vérifie le code avec pylint
